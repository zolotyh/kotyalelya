{"version":3,"sources":["index.js"],"names":["d","document","getUrlParams","URLSearchParams","window","location","search","b64EncodeUnicode","str","btoa","encodeURIComponent","replace","toSolidBytes","_","p1","String","fromCharCode","b64DecodeUnicode","decodeURIComponent","atob","split","map","c","charCodeAt","toString","slice","join","addEventListener","TITLE","params","querySelector","e","preventDefault","set","value","title","get","innerHTML"],"mappings":"AAAA,IAAMA,CAAC,GAAGC,QAAV;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAO,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAP;AAAA,CAArB;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC3B;AACA;AACA;AACA,SAAOC,IAAI,CAACC,kBAAkB,CAACF,GAAD,CAAlB,CAAwBG,OAAxB,CAAgC,iBAAhC,EACR,SAASC,YAAT,CAAsBC,CAAtB,EAAyBC,EAAzB,EAA6B;AACzB,WAAOC,MAAM,CAACC,YAAP,CAAoB,OAAOF,EAA3B,CAAP;AACP,GAHW,CAAD,CAAX;AAIH;;AAGD,SAASG,gBAAT,CAA0BT,GAA1B,EAA+B;AAC3B;AACA,SAAOU,kBAAkB,CAACC,IAAI,CAACX,GAAD,CAAJ,CAAUY,KAAV,CAAgB,EAAhB,EAAoBC,GAApB,CAAwB,UAASC,CAAT,EAAY;AAC1D,WAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,GAFyB,EAEvBC,IAFuB,CAElB,EAFkB,CAAD,CAAzB;AAGH;;AAID1B,CAAC,CAAC2B,gBAAF,CAAmB,kBAAnB,EAAuC,YAAM;AACzC,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,MAAM,GAAG3B,YAAY,EAA3B;AAEAF,EAAAA,CAAC,CAAC8B,aAAF,CAAgB,OAAhB,EAAyBH,gBAAzB,CAA0C,QAA1C,EAAoD,UAACI,CAAD,EAAO;AACvDA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,MAAM,CAACI,GAAP,CAAWL,KAAX,EAAkBrB,gBAAgB,CAACN,QAAQ,CAAC6B,aAAT,CAAuB,QAAvB,EAAiCI,KAAlC,CAAlC;AACA9B,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBuB,MAAM,CAACL,QAAP,EAAzB;AACH,GALD;AAOA,MAAMW,KAAK,GAAIlB,gBAAgB,CAACC,kBAAkB,CAACW,MAAM,CAACO,GAAP,CAAWR,KAAX,CAAD,CAAnB,CAA/B;AAEA3B,EAAAA,QAAQ,CAAC6B,aAAT,CAAuB,aAAvB,EAAsCO,SAAtC,GAAkDF,KAAlD;AACAlC,EAAAA,QAAQ,CAAC6B,aAAT,CAAuB,QAAvB,EAAiCI,KAAjC,GAAyCC,KAAzC;AACH,CAfD","file":"lelya.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const d = document;\n\n\nconst getUrlParams = () =>  new URLSearchParams(window.location.search);\n\nfunction b64EncodeUnicode(str) {\n    // first we use encodeURIComponent to get percent-encoded UTF-8,\n    // then we convert the percent encodings into raw bytes which\n    // can be fed into btoa.\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g,\n        function toSolidBytes(_, p1) {\n            return String.fromCharCode('0x' + p1);\n    }));\n}\n\n\nfunction b64DecodeUnicode(str) {\n    // Going backwards: from bytestream, to percent-encoding, to original string.\n    return decodeURIComponent(atob(str).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n}\n\n\n\nd.addEventListener(\"DOMContentLoaded\", () => {\n    const TITLE = 'title';\n    const params = getUrlParams();\n\n    d.querySelector('.form').addEventListener('submit', (e) => {\n        e.preventDefault();\n\n        params.set(TITLE, b64EncodeUnicode(document.querySelector('.tarea').value));\n        window.location.search = params.toString();\n    })\n\n    const title =  b64DecodeUnicode(decodeURIComponent(params.get(TITLE)));\n\n    document.querySelector('.name > div').innerHTML = title;\n    document.querySelector('.tarea').value = title;\n});\n"]}